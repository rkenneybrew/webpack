export default remarkLintNoUndefinedReferences
export type Heading = import('mdast').Heading
export type Paragraph = import('mdast').Paragraph
export type Root = import('mdast').Root
export type Options = {
  /**
   * Text or regex that you want to be allowed between `[` and `]` even though
   * itâ€™s `undefined` (default: `[]`).
   *
   * Regex is provided via a `RegExp` object or via a `{source: string}` object
   * where `source` is the source text of a case-insensitive regex.
   */
  allow?:
    | Array<
        | string
        | RegExp
        | {
            source: string
          }
      >
    | null
    | undefined
}
export type Range = Array<number>
declare const remarkLintNoUndefinedReferences: import('unified').Plugin<
  | void[]
  | [
      | Options
      | [
          (
            | boolean
            | import('unified-lint-rule/lib/index.js').Label
            | import('unified-lint-rule/lib/index.js').Severity
          ),
          (Options | undefined)?
        ]
      | undefined
    ],
  import('mdast').Root,
  import('mdast').Root
>
