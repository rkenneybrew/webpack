import { NodePath } from '@babel/core';
import * as t from '@babel/types';
import { PluginState } from '../types';
import { JSX_IDENTS } from '../utils/Symbols';
declare type CssPropPluginState = PluginState & {
    [JSX_IDENTS]: {
        jsx: t.Identifier;
        jsxFrag: t.Identifier;
    };
};
export declare const isCreateElementCall: (p: NodePath<any>) => any;
declare const _default: {
    Program: {
        exit(path: NodePath<t.Program>, state: CssPropPluginState): void;
    };
    CallExpression(path: NodePath<t.CallExpression>, state: CssPropPluginState): void;
    JSXAttribute(path: NodePath<t.JSXAttribute>, state: CssPropPluginState): void;
};
export default _default;
