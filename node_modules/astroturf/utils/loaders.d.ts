import { SourceLocation } from '@babel/types';
import type { CssSyntaxError } from 'postcss';
import type { AstroturfMetadata, DependencyResolver, ResolvedImport, ResolvedOptions, Style } from '../types';
declare class AstroturfLoaderError extends Error {
    error?: Error | string;
    constructor(errorOrMessage: string | Error, codeFrame?: any);
    handleBabelError(error: Error): void;
    handleCssError(error: CssSyntaxError): void;
}
export declare function buildDependencyError(content: string, { type, identifier, request }: ResolvedImport, styles: Style[], resource: string, loc: SourceLocation): AstroturfLoaderError;
export declare function collectStyles(src: string, filename: string, resolveDependency: DependencyResolver, opts: Partial<ResolvedOptions>): AstroturfMetadata;
export declare function replaceStyleTemplates(filename: string, src: string, locations: {
    start?: number;
    end?: number;
    code?: string;
}[], sourceMap?: boolean): {
    code: string;
    map: import("magic-string").SourceMap | null;
};
export declare function resolveOptions(loaderContext: any): Promise<Partial<ResolvedOptions>>;
export {};
