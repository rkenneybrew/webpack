"use strict";

exports.__esModule = true;
exports.default = void 0;
var _pluginTransformReactJsx = _interopRequireDefault(require("@babel/plugin-transform-react-jsx"));
var _plugin = _interopRequireDefault(require("./plugin"));
var _addPragma = _interopRequireDefault(require("./utils/addPragma"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const pragma = '__AstroturfJSX';
function pragmaPlugin() {
  return {
    visitor: {
      Program: {
        exit(path, state) {
          if (!state.file.get('jsxDetected')) return;
          (0, _addPragma.default)(path, state.opts.import, false);
        }
      },
      JSXElement(_, state) {
        state.file.set('jsxDetected', true);
      },
      JSXFragment(_, state) {
        state.file.set('jsxDetected', true);
      }
    }
  };
}
var _default = (_, {
  jsxOptions,
  ...options
} = {}) => {
  return {
    plugins: [[pragmaPlugin, {
      import: pragma
    }], [_pluginTransformReactJsx.default, {
      ...jsxOptions,
      pragma,
      pragmaFrag: `React.Fragment`
    }], [_plugin.default, {
      ...options,
      jsxPragma: false
    }]]
  };
};
exports.default = _default;